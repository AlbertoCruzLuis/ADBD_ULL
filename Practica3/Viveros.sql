-- MySQL Script generated by MySQL Workbench
-- Tue Nov  2 19:27:03 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering


-- -----------------------------------------------------
-- Schema viverosDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema viverosDB
-- -----------------------------------------------------
DROP DATABASE IF EXISTS viverosDB;
CREATE DATABASE viverosDB;

-- -----------------------------------------------------
-- Table viverosDB.Viveros
-- -----------------------------------------------------
DROP TABLE IF EXISTS viverosDB.VIVERO;

CREATE TABLE IF NOT EXISTS viverosDB.Viveros (
  ubicacion VARCHAR(45) NOT NULL,
  PRIMARY KEY (ubicacion))



-- -----------------------------------------------------
-- Table viverosDB.Zonas
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS viverosDB.Zonas (
  idZonas INT NOT NULL,
  Viveros_ubicacion VARCHAR(45) NOT NULL,
  PRIMARY KEY (idZonas, Viveros_ubicacion),
  INDEX fk_Zonas_Viveros_idx (Viveros_ubicacion ASC) VISIBLE,
  CONSTRAINT fk_Zonas_Viveros
    FOREIGN KEY (Viveros_ubicacion)
    REFERENCES viverosDB.Viveros (ubicacion)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)



-- -----------------------------------------------------
-- Table viverosDB.Cliente
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS viverosDB.Cliente (
  Dni VARCHAR(9) NOT NULL,
  email VARCHAR(45) NULL,
  credito_mensual INT NULL,
  nombre VARCHAR(45) NULL,
  PRIMARY KEY (Dni))



-- -----------------------------------------------------
-- Table viverosDB.Pedidos
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS viverosDB.Pedidos (
  codigo_venta INT NOT NULL,
  coste INT NULL,
  Cliente_Dni VARCHAR(9) NOT NULL,
  PRIMARY KEY (codigo_venta, Cliente_Dni),
  INDEX fk_Pedidos_Cliente1_idx (Cliente_Dni ASC) VISIBLE,
  CONSTRAINT fk_Pedidos_Cliente1
    FOREIGN KEY (Cliente_Dni)
    REFERENCES viverosDB.Cliente (Dni)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)



-- -----------------------------------------------------
-- Table viverosDB.Empleados
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS viverosDB.Empleados (
  Dni VARCHAR(9) NOT NULL,
  Fecha_inicio DATE NULL,
  Fecha_fin DATE NULL,
  Zonas_idZonas INT NOT NULL,
  Zonas_Viveros_ubicacion VARCHAR(45) NOT NULL,
  Pedidos_codigo_venta INT NOT NULL,
  PRIMARY KEY (Dni, Zonas_idZonas, Zonas_Viveros_ubicacion, Pedidos_codigo_venta),
  INDEX fk_Empleados_Zonas1_idx (Zonas_idZonas ASC, Zonas_Viveros_ubicacion ASC) VISIBLE,
  INDEX fk_Empleados_Pedidos1_idx (Pedidos_codigo_venta ASC) VISIBLE,
  CONSTRAINT fk_Empleados_Zonas1
    FOREIGN KEY (Zonas_idZonas , Zonas_Viveros_ubicacion)
    REFERENCES viverosDB.Zonas (idZonas , Viveros_ubicacion)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Empleados_Pedidos1
    FOREIGN KEY (Pedidos_codigo_venta)
    REFERENCES viverosDB.Pedidos (codigo_venta)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)



-- -----------------------------------------------------
-- Table viverosDB.Productos
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS viverosDB.Productos (
  codigo_id INT NOT NULL,
  stock INT NULL,
  precio INT NULL,
  Pedidos_codigo_venta INT NOT NULL,
  Zonas_idZonas INT NOT NULL,
  Zonas_Viveros_ubicacion VARCHAR(45) NOT NULL,
  PRIMARY KEY (codigo_id, Pedidos_codigo_venta),
  INDEX fk_Productos_Pedidos1_idx (Pedidos_codigo_venta ASC) VISIBLE,
  INDEX fk_Productos_Zonas1_idx (Zonas_idZonas ASC, Zonas_Viveros_ubicacion ASC) VISIBLE,
  CONSTRAINT fk_Productos_Pedidos1
    FOREIGN KEY (Pedidos_codigo_venta)
    REFERENCES viverosDB.Pedidos (codigo_venta)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Productos_Zonas1
    FOREIGN KEY (Zonas_idZonas , Zonas_Viveros_ubicacion)
    REFERENCES viverosDB.Zonas (idZonas , Viveros_ubicacion)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)



-- -----------------------------------------------------
-- Data for table viverosDB.Viveros
-- -----------------------------------------------------
INSERT INTO viverosDB.Viveros (ubicacion) VALUES ('La Laguna');
INSERT INTO viverosDB.Viveros (ubicacion) VALUES ('Tacoronte');

COMMIT;


-- -----------------------------------------------------
-- Data for table viverosDB.Cliente
-- -----------------------------------------------------

INSERT INTO viverosDB.Cliente (Dni, email, credito_mensual, nombre) VALUES ('78654815R', 'juanitogonzalez@gmail.com', 275, 'Juanito');
INSERT INTO viverosDB.Cliente (Dni, email, credito_mensual, nombre) VALUES ('6895423P', 'gloriafernanda@gmail.com', 350, 'Gloria');

COMMIT;


-- -----------------------------------------------------
-- Data for table viverosDB.Empleados
-- -----------------------------------------------------

INSERT INTO viverosDB.Empleados (Dni, Fecha_inicio, Fecha_fin, Zonas_idZonas, Zonas_Viveros_ubicacion, Pedidos_codigo_venta) VALUES ('58914362Y', '08/01/2021', '08/03/2021', 1, 'La Laguna', 1234);
INSERT INTO viverosDB.Empleados (Dni, Fecha_inicio, Fecha_fin, Zonas_idZonas, Zonas_Viveros_ubicacion, Pedidos_codigo_venta) VALUES ('78958256G', '08/01/2021', '08/03/2021', 2, 'Tacoronte', 5678);

COMMIT;


-- -----------------------------------------------------
-- Data for table viverosDB.Productos
-- -----------------------------------------------------

INSERT INTO viverosDB.Productos (codigo_id, stock, precio, Pedidos_codigo_venta, Zonas_idZonas, Zonas_Viveros_ubicacion) VALUES (1234, 27, 12, 1234, 1, 'La Laguna');
INSERT INTO viverosDB.Productos (codigo_id, stock, precio, Pedidos_codigo_venta, Zonas_idZonas, Zonas_Viveros_ubicacion) VALUES (5678, 14, 3, 5678, 2, 'Tacoronte');

COMMIT;


